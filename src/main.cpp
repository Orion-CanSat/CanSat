//-------------------------------------------------------------------------------------------------------------------------------------------------
// Generated by Make me a Makefile (https://github.com/Orion-CanSat/Make-me-a-Makefile)
//
// Board:            Teensy 4.1
// CPU Speed:        600000000
// Optimization:     -O3
// 
// Time of creation: 2020/12/05 12:57
//-------------------------------------------------------------------------------------------------------------------------------------------------

#include "main.hpp"

#include "Arduino.h"

#include "Orion.h"

#include "Orion/Utilities/Memory/shared_ptr.hpp"
#include "Orion/Utilities/Memory/unique_ptr.hpp"

#include "Orion/Modules/DataModules/BME280.hpp"
#include "Orion/Modules/DataModules/BNO055.hpp"
#include "Orion/Modules/DataModules/TeensyChipTemperature.hpp"

#include "Orion/Data/Alitutde.hpp"
#include "Orion/Data/Pressure.hpp"
#include "Orion/Data/Temperature.hpp"

#include "internalTempController.hpp"


extern float tempmonGetTemp(void);

Orion::Utilities::Memory::shared_ptr<Orion::Modules::DataModules::TeensyChipTemperature> _teensyChipTemperature =
    new Orion::Modules::DataModules::TeensyChipTemperature();
Orion::Utilities::Memory::shared_ptr<Orion::Modules::DataModules::BME280> _bme =
    new Orion::Modules::DataModules::BME280();
Orion::Utilities::Memory::shared_ptr<Orion::Modules::DataModules::BNO055> _bno =
    new Orion::Modules::DataModules::BNO055();

Orion::Utilities::Memory::shared_ptr<Orion::Data::Altitude> _altitude;
Orion::Utilities::Memory::shared_ptr<Orion::Data::Pressure> _pressure;
Orion::Utilities::Memory::shared_ptr<Orion::Data::Temperature> _temperature;
Orion::Utilities::Memory::shared_ptr<Orion::Data::Temperature> _chipTemperature;

Orion::Utilities::Memory::unique_ptr<bool> testb = new bool(false);;

int main(void)
{
    Serial.begin(9600);

    if (!SetUpInternalTempController(_teensyChipTemperature.get()))
    {

    }

    _altitude = new Orion::Data::Altitude(_bme.get());
    _chipTemperature = new Orion::Data::Temperature(_teensyChipTemperature.get());
    _pressure = new Orion::Data::Pressure(_bme.get());
    _temperature = new Orion::Data::Temperature(_bme.get());

    while (true)
    {
        RunTemperatureCheck();

        delay(1000);
        yield();
    }
}

