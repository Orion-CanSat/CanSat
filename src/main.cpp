//-------------------------------------------------------------------------------------------------------------------------------------------------
// Generated by Make me a Makefile (https://github.com/Orion-CanSat/Make-me-a-Makefile)
//
// Board:            Teensy 4.1
// CPU Speed:        600000000
// Optimization:     -O3
// 
// Time of creation: 2020/12/05 12:57
//-------------------------------------------------------------------------------------------------------------------------------------------------

#include "main.hpp"

#include "Arduino.h"

#include "Orion.h"

#include "Orion/Modules/DataModules/TeensyChipTemperature.hpp"
#include "Orion/Modules/DataModules/BME280.hpp"
#include "Orion/Modules/DataModules/BNO055.hpp"

#include "Orion/Data/Alitutde.hpp"
#include "Orion/Data/Pressure.hpp"
#include "Orion/Data/Temperature.hpp"


extern float tempmonGetTemp(void);

Orion::Modules::DataModules::TeensyChipTemperature* _teensyChipTemperature = nullptr;
Orion::Modules::DataModules::BME280* _bme = nullptr;
Orion::Modules::DataModules::BNO055* _bno = nullptr;

Orion::Data::Altitude<Orion::Modules::DataModules::BME280> _altitude;
Orion::Data::Pressure<Orion::Modules::DataModules::BME280> _pressure;
Orion::Data::Temperature<Orion::Modules::DataModules::BME280> _temperature;
Orion::Data::Temperature<Orion::Modules::DataModules::TeensyChipTemperature> _chipTemperature;


int main(void)
{
    Serial.begin(9600);

    Serial.println("Starting Chip Temperature");
        _teensyChipTemperature = new Orion::Modules::DataModules::TeensyChipTemperature();
    Serial.println("Chip Temperature initialized");

    Serial.println("Starting BME");
        _bme = new Orion::Modules::DataModules::BME280();
    Serial.println(((!_bme || !_bme->IsInitialized()) ? "BME Initialized" : "BME did not initlize"));

    Serial.println("Starting BNO");
        _bno = new Orion::Modules::DataModules::BNO055();
    Serial.println(((!_bno || !_bno->IsInitialized()) ? "BNO Initialized" : "BNO did not initlize"));

    _altitude = Orion::Data::Altitude<Orion::Modules::DataModules::BME280>(_bme);
    _pressure = Orion::Data::Pressure<Orion::Modules::DataModules::BME280>(_bme);
    _temperature = Orion::Data::Temperature<Orion::Modules::DataModules::BME280>(_bme);
    _chipTemperature = Orion::Data::Temperature<Orion::Modules::DataModules::TeensyChipTemperature>(_teensyChipTemperature);

    while (true)
    {
        if (!_bme)
            Serial.println("BME did not initialize and returned null");
        if (!_bme->IsInitialized())
            Serial.println("BME did not initialize");
        
        if (!_bno)
            Serial.println("BNO did not initialize and returned null");
        if (!_bno->IsInitialized())
            Serial.println("BNO did not initialize");

        _teensyChipTemperature->Update();
        Serial.println(_teensyChipTemperature->GetData(__TEMPERATURE__));

        delay(1000);
        yield();
    }
}

